from flask import Flask, request, jsonify, send_file
from flask_cors import CORS
import requests
import io
import os
import random
from PIL import Image, ImageDraw

app = Flask(__name__)
CORS(app)

HF_API_KEY = os.getenv('HF_API_KEY')

def generate_image(prompt):
    """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–º–∏ –º–æ–¥–µ–ª—è–º–∏"""
    
    # –°–ü–ò–°–û–ö –ì–ê–†–ê–ù–¢–ò–†–û–í–ê–ù–ù–û –†–ê–ë–û–ß–ò–• –ú–û–î–ï–õ–ï–ô
    models = [
        "https://api-inference.huggingface.co/models/stabilityai/stable-diffusion-2-1",
        "https://api-inference.huggingface.co/models/ogkalu/Stable-Diffusion-v1-5",
        "https://api-inference.huggingface.co/models/wavymulder/Analog-Diffusion"
    ]
    
    headers = {"Authorization": f"Bearer {HF_API_KEY}"}
    
    for model_url in models:
        try:
            print(f"üîπ –ü—Ä–æ–±—É–µ–º –º–æ–¥–µ–ª—å: {model_url}")
            
            response = requests.post(model_url, headers=headers, json={
                "inputs": prompt,
                "options": {"wait_for_model": True}
            }, timeout=30)
            
            print(f"üîπ –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: {response.status_code}")
            
            if response.status_code == 200:
                print(f"‚úÖ –£–°–ü–ï–• —Å –º–æ–¥–µ–ª—å—é: {model_url}")
                return response.content
            elif response.status_code == 503:
                print(f"‚è≥ –ú–æ–¥–µ–ª—å –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è: {model_url}")
                continue
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ {response.status_code} –æ—Ç {model_url}")
                continue
                
        except Exception as e:
            print(f"‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ —Å {model_url}: {str(e)}")
            continue
    
    # –ï—Å–ª–∏ –≤—Å–µ –º–æ–¥–µ–ª–∏ –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª–∏ - —Å–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    print("üîÑ –í—Å–µ –º–æ–¥–µ–ª–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã, —Å–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ")
    img = Image.new('RGB', (512, 512), color=(
        random.randint(50, 200), 
        random.randint(50, 200), 
        random.randint(50, 200)
    ))
    d = ImageDraw.Draw(img)
    d.text((50, 250), f"Prompt: {prompt[:30]}", fill=(255, 255, 255))
    
    img_bytes = io.BytesIO()
    img.save(img_bytes, format='PNG')
    img_bytes.seek(0)
    return img_bytes.getvalue()

@app.route('/generate', methods=['POST'])
def generate_image_route():
    try:
        data = request.json
        prompt = data.get('prompt', '')
        
        if not prompt:
            return jsonify({"error": "–ü—Ä–æ–º–ø—Ç –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º"}), 400
        
        print(f"üé® –ü–æ–ª—É—á–µ–Ω –ø—Ä–æ–º–ø—Ç: {prompt}")
        
        # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        image_bytes = generate_image(prompt)
        
        print("‚úÖ –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ")
        return send_file(
            io.BytesIO(image_bytes),
            mimetype='image/png'
        )
        
    except Exception as e:
        error_msg = f"–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏: {str(e)}"
        print(f"‚ùå {error_msg}")
        return jsonify({"error": error_msg}), 500

@app.route('/health', methods=['GET'])
def health_check():
    return jsonify({"status": "OK", "message": "–°–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç"})

if __name__ == '__main__':
    app.run(host='0.0.0.0', port=5000, debug=False)
