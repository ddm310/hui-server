from flask import Flask, request, jsonify, send_file
from flask_cors import CORS
import requests
import io
import urllib.parse

app = Flask(__name__)
CORS(app)

@app.route('/generate', methods=['POST'])
def generate_image_route():
    try:
        data = request.json
        prompt = data.get('prompt', '')
        model_name = data.get('model', 'pollinations')
        
        if not prompt:
            return jsonify({"error": "–ü—Ä–æ–º–ø—Ç –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º"}), 400
        
        print(f"üé® –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º: {prompt}")
        print(f"üîß –ü—Ä–æ–≤–∞–π–¥–µ—Ä: Pollinations.ai")
        
        # –ö–æ–¥–∏—Ä—É–µ–º –ø—Ä–æ–º–ø—Ç –¥–ª—è URL
        encoded_prompt = urllib.parse.quote(prompt)
        
        # Pollinations.ai API
        pollinations_url = f"https://image.pollinations.ai/prompt/{encoded_prompt}"
        
        response = requests.get(pollinations_url, timeout=60)
        
        print(f"üîπ –°—Ç–∞—Ç—É—Å: {response.status_code}")
        
        if response.status_code == 200:
            print("‚úÖ –£–°–ü–ï–•: –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ —á–µ—Ä–µ–∑ Pollinations.ai!")
            return send_file(
                io.BytesIO(response.content),
                mimetype='image/png'
            )
        else:
            return jsonify({"error": f"–û—à–∏–±–∫–∞ Pollinations.ai: {response.status_code}"}), 500
        
    except Exception as e:
        error_msg = f"–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏: {str(e)}"
        print(f"‚ùå {error_msg}")
        return jsonify({"error": error_msg}), 500

@app.route('/health', methods=['GET'])
def health_check():
    return jsonify({"status": "OK", "message": "–°–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç"})

if __name__ == '__main__':
    app.run(host='0.0.0.0', port=5000, debug=False)
